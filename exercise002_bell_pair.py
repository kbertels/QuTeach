# Quantum Entanglement

from openql import openql as ql
import os

curdir = os.path.dirname(__file__)
output_dir = os.path.join(curdir, 'cqasm_files')
ql.set_option('output_dir', output_dir)
ql.set_option('write_qasm_files', 'yes')

config_fn  = os.path.join(curdir, 'config_qx.json')
platform   = ql.Platform('platform_none', config_fn)

num_qubits = 2
p = ql.Program('exercise_qasm_002', platform, num_qubits)
k = ql.Kernel("entangle", platform, num_qubits)

k.prepz(0)				# Initialize qubit 0 to |0>
k.prepz(1)				# Initialize qubit 1 to |0>
k.gate('h', [0])		# Hadamard
k.gate('cnot', [0, 1])	# CNOT with qubit 0 as control and qubit 1 as target

k.display()				# Display the Bell pair (|00> + |11>)/sqrt(2)

k.measure(0)
k.measure(1)

k.display()				# The superposition is destroyed on measurement and we get either |00> XOR |11>, but never |01> or |10>

p.add_kernel(k)
p.compile()

qasm = p.qasm()			# Get the cqasm generated by OpenQL
print(qasm)